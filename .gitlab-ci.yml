image: docker:latest
services:
  - name: docker:dind
    alias: docker

stages:
  - Build image
  - Test acceptation
  - Release image
  - Deploy review
  - Test prod

.test_template: &test
  image: alpine
  only:
    - master
  script:
    - apk --no-cache add curl
    - curl "http://$DOMAIN:32000" | grep -q "Hello world!"


build:
  # Official docker image.
  stage: Build image
  script:
    - docker build -t alpinehelloworld .
    - docker save alpinehelloworld > alpinehelloworld.tar
  artifacts:
    paths:
      - alpinehelloworld.tar


test acceptation:
  # Official docker image.
  stage: Test acceptation
  script:
    - docker load < alpinehelloworld.tar
    - docker run -d -p 80:5000 -e PORT=5000 --name webapp alpinehelloworld
    - sleep 5
    - apk --no-cache add curl
    - curl "http://docker" | grep -q "Hello world!"

release image:
  stage: Release image
  script:
    - docker load < alpinehelloworld.tar
    - docker tag alpinehelloworld "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker tag alpinehelloworld "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"


deploy prod:
  stage: Deploy prod
  image: bitnami/kubectl:1.19
  environment:
    name: prod
    url: http://$MINIKUBE:32000
  only:
    - master
  script:
    - kubectl config set-cluster minikube --server=${KUBE_URL} --certificate-authority="${KUBE_CA_PEM_FILE}"
    - kubectl config set-credentials gitlab-admin --token=${KUBE_TOKEN}
    - kubectl config set-context minikube --cluster=minikube --user=admin --namespace default
    - kubectl config use-context minikube
    - kubectl create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --docker-email=$GITLAB_USER_EMAIL
    - cat kubernetes/alpinehelloworld.tpl | sed s/REPO/"$CI_PROJECT_NAME/" > kubernetes/alpinehelloworld.yml
    - cat kubernetes/alpinehelloworld.tpl | sed s/USER/"$CI_REGISTRY_USER/" > kubernetes/alpinehelloworld.yml
    - kubectl apply -f kubernetes

test prod:
  <<: *test
  stage: Test prod
  variables:
    DOMAIN: $MINIKUBE